{"ast":null,"code":"var _jsxFileName = \"D:\\\\REACT\\\\expense-tracker-app\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport './Expenses.css';\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Expenses = props => {\n  _s();\n  const [selectedYear, setSelectedYear] = useState('2020');\n  const [filteredInfoText, setFilteredInfoText] = useState('2019, 2021, 2022 & 2023');\n  const filteredYear = selectedYear => {\n    setSelectedYear(selectedYear);\n    if (selectedYear === '2019') {\n      setSelectedYear('2020, 2021, 2022 & 2023');\n    } else if (selectedYear === '2021') {\n      setSelectedYear('2019, 2020, 2022 & 2023');\n    } else if (selectedYear === '2022') {\n      setSelectedYear('2019, 2020, 2021 & 2023');\n    } else {\n      setSelectedYear('2019, 2020, 2021 & 2022');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      year: selectedYear,\n      onFilterYear: filteredYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Data for years \", filteredInfoText, \" is hidden.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: props.items[0].date,\n      title: props.items[0].title,\n      amount: props.items[0].amount,\n      id: props.items[0].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: props.items[1].date,\n      title: props.items[1].title,\n      amount: props.items[1].amount,\n      id: props.items[1].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: props.items[2].date,\n      title: props.items[2].title,\n      amount: props.items[2].amount,\n      id: props.items[2].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      date: props.items[3].date,\n      title: props.items[3].title,\n      amount: props.items[3].amount,\n      id: props.items[3].id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Expenses, \"N7MLPRLpeJ+oFCq9WzRrrXufEOg=\");\n_c = Expenses;\nexport default Expenses;\nvar _c;\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpensesFilter","jsxDEV","_jsxDEV","Expenses","props","_s","selectedYear","setSelectedYear","filteredInfoText","setFilteredInfoText","filteredYear","className","children","year","onFilterYear","fileName","_jsxFileName","lineNumber","columnNumber","date","items","title","amount","id","_c","$RefreshReg$"],"sources":["D:/REACT/expense-tracker-app/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, {useState} from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport './Expenses.css';\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nconst Expenses = (props) => {\r\n    const [selectedYear, setSelectedYear] = useState('2020');\r\n    const [filteredInfoText, setFilteredInfoText] = useState('2019, 2021, 2022 & 2023');\r\n    const filteredYear = (selectedYear) =>{\r\n        setSelectedYear(selectedYear);\r\n        if (selectedYear === '2019'){\r\n            setSelectedYear('2020, 2021, 2022 & 2023');\r\n        } else if (selectedYear === '2021') {\r\n            setSelectedYear('2019, 2020, 2022 & 2023');\r\n        } else if (selectedYear === '2022'){\r\n            setSelectedYear('2019, 2020, 2021 & 2023');\r\n        } else {\r\n            setSelectedYear('2019, 2020, 2021 & 2022');\r\n        }\r\n    }\r\n    return(\r\n        <Card className=\"expenses\">\r\n            <ExpensesFilter year={selectedYear} onFilterYear={filteredYear}/>\r\n            <p>Data for years {filteredInfoText} is hidden.</p>\r\n            <ExpenseItem\r\n                date={props.items[0].date}\r\n                title={props.items[0].title}\r\n                amount={props.items[0].amount}\r\n                id={props.items[0].id}\r\n            />\r\n            <ExpenseItem\r\n                date={props.items[1].date}\r\n                title={props.items[1].title}\r\n                amount={props.items[1].amount}\r\n                id={props.items[1].id}\r\n            />\r\n            <ExpenseItem\r\n                date={props.items[2].date}\r\n                title={props.items[2].title}\r\n                amount={props.items[2].amount}\r\n                id={props.items[2].id}\r\n            />\r\n            <ExpenseItem\r\n                date={props.items[3].date}\r\n                title={props.items[3].title}\r\n                amount={props.items[3].amount}\r\n                id={props.items[3].id}\r\n            />\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Expenses;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}